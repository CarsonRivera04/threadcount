@using ClothingApp.Components.Components.Icons
@using ClothingApp.Models
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<ClothingApp.Data.ClothingAppContext> DbFactory
@inject NavigationManager NavigationManager
@rendermode InteractiveServer



<Card Shadow="Shadow.Small">
    <CardBody>
        <CardTitle Style="display: flex; align-items: center" Size="5">
            <DynamicComponent Type="@SafeDict(ClothingItem.ClothingType)" Parameters="@GetIconParameters()" />
            @ClothingItem.Name
        </CardTitle>
        <Divider />
        <Buttons Style="width: 100%;">
            <Button Style="width: 33.34%;" Color="Color.Success" Type="ButtonType.Link" Clicked="@WearClicked">
				<Icon Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.PlusSquare"/> Wear Item 
            </Button>
            <Button Style="width: 33.33%;" Color="Color.Secondary" Type="ButtonType.Link" To="@($"clothingitems/edit?id={ClothingItem.Id}")">
				<Icon Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.Pen"/> Edit
			</Button>
            <Button Style="width: 33.33%;" Color="Color.Secondary" Clicked="@ToggleModal">
				<Icon Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.Trash"/> Delete 
            </Button>
        </Buttons>
        <Divider />
        <Badge Color="Color.Primary">
            <Icon Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.Expand"/> Size: @ClothingItem.Size
		</Badge>
		<Badge Color="Color.Secondary">
            <Icon Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.GaugeSimpleHigh"/> Condition: @ClothingItem.Condition
		</Badge>
		<Badge Color="Color.Info">
            <Icon Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.Repeat"/> Times Worn: @ClothingItem.NumberWorn
        </Badge>
        <Badge Color="Color.Dark">
            <Icon Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.Calendar"/> Last Worn: @ClothingItem.LastWorn
        </Badge>
        <CardText>@ClothingItem.Description</CardText>
        <Divider />
        <Alert Color="Color.Success" @bind-Visible="@visible">
            <AlertMessage>
                Well done!
            </AlertMessage>
            <AlertDescription>
                @{
                    string temp = "time!";
                    if (ClothingItem.NumberWorn > 1)
                    {
                        temp = "times!";
                    }
                }
                You have now worn your @ClothingItem.Name @ClothingItem.NumberWorn @temp 
            </AlertDescription>
			<CloseButton />
		</Alert>
	</CardBody>
</Card>

<Div Flex="Flex.JustifyContent.Center">

    <Modal @bind-Visible="@modalVisible">
        <ModalContent Centered>
            <ModalHeader>
                <ModalTitle>Delete item</ModalTitle>
                <CloseButton />
            </ModalHeader>
            <ModalBody>
                <Div Flex="Flex.JustifyContent.Center.AlignItems.Center" Padding="Padding.Is3">
                    <Icon Name="IconName.Delete" IconSize="Blazorise.IconSize.x3" />
                </Div>
				<Card>
					<CardBody>
						<CardTitle Style="display: flex; align-items: center" Size="5">
							<DynamicComponent Type="@SafeDict(ClothingItem.ClothingType)" Parameters="@GetIconParameters()" />
							@ClothingItem.Name
						</CardTitle>
						<Divider />
						<Badge Color="Color.Primary">
							<Icon Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.Expand" /> Size: @ClothingItem.Size
						</Badge>
						<Badge Color="Color.Secondary">
							<Icon Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.GaugeSimpleHigh" /> Condition: @ClothingItem.Condition
						</Badge>
						<Badge Color="Color.Info">
							<Icon Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.Repeat" /> Times Worn: @ClothingItem.NumberWorn
						</Badge>
						<Badge Color="Color.Dark">
							<Icon Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.Calendar" /> Last Worn: @ClothingItem.LastWorn
						</Badge>
						<CardText>@ClothingItem.Description</CardText>
					</CardBody>
				</Card>
				<Paragraph TextAlignment="TextAlignment.Center">
                     Are you sure you want to delete this item?
                </Paragraph>
            </ModalBody>
             <ModalFooter Flex="Flex.JustifyContent.Center.AlignItems.Center" Gap="Gap.Is3">
                 <Button Color="Color.Secondary" Outline Clicked="@ToggleModal">
                     No, cancel
                 </Button>
                <Button Color="Color.Danger" Clicked="@DeleteClothingItem">
                    Yes, I'm sure
                </Button>
            </ModalFooter>
        </ModalContent>
    </Modal>
</Div>